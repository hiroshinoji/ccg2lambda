Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_most(\w.TrueP) & _great(\w.TrueP) & _tenor(\w.TrueP))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_most(\w.TrueP) & _great(\w.TrueP) & _tenor(\w.TrueP))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
(_most(\w.TrueP) & _great(\w.TrueP) & _tenor(\w.TrueP))(\x._italian(x))
                                                      ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _portugal) & TrueP & _from(\F Q.Q(\w.TrueP,F),_portugal))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _portugal) & TrueP & _from(\F Q.Q(\w.TrueP,F),_portugal))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.((z1 = _portugal) & TrueP & _from(\F Q.Q(\w.TrueP,F),_portugal))(\F1 F2.-exists x.(_few(x) & _committee(x) & _member(x) & F1(x) & F2(x)))
                                                                         ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))(\F2 F3.exists x.(_few(x) & _committee(x) & _member(x) & F2(x) & F3(x)))
                                                                               ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))(\F2 F3.exists x.(_few(x) & _female(x) & _committee(x) & _member(x) & F2(x) & F3(x)))
                                                                               ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_southern(z1) & _europe(z1) & TrueP & _from(\F Q.Q(\w.TrueP,F),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_southern(z1) & _europe(z1) & TrueP & _from(\F Q.Q(\w.TrueP,F),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_southern(z1) & _europe(z1) & TrueP & _from(\F Q.Q(\w.TrueP,F),z1))(\F1 F2.-exists x.(_few(x) & _female(x) & _committee(x) & _member(x) & F1(x) & F2(x)))
                                                                             ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.((z1 = _scandinavia) & TrueP & _from(\F Q.Q(\w.TrueP,F),_scandinavia))(\F2 F3.exists x.(_few(x) & _committee(x) & _member(x) & F2(x) & F3(x)))
                                                                               ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_southern(z2) & _europe(z2) & TrueP & _from(\F Q.Q(\w.TrueP,F),z2))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_southern(z2) & _europe(z2) & TrueP & _from(\F Q.Q(\w.TrueP,F),z2))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z2.(_southern(z2) & _europe(z2) & TrueP & _from(\F Q.Q(\w.TrueP,F),z2))(\F1 F2.-exists x.(_few(x) & _female(x) & _committee(x) & _member(x) & F1(x) & F2(x)))
                                                                             ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_lobby(z8) & TrueP & _in(\F Q2.Q2(\w.TrueP,\x.(exists z7.(TrueP & _put(x,z7)) & F(x))),z8))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_lobby(z8) & TrueP & _in(\F Q2.Q2(\w.TrueP,\x.(exists z7.(TrueP & _put(x,z7)) & F(x))),z8))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z8.(_lobby(z8) & TrueP & _in(\F Q2.Q2(\w.TrueP,\x.(exists z7.(TrueP & _put(x,z7)) & F(x))),z8))(\F1 F2.exists x.(F1(x) & F2(x)))
                                                                                                     ^
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z4 = _gfi) & _gfi(\w.TrueP,\z4._own(z4,z3))) with signature {'z4': e, '_own': <e,<e,t>>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z4 = _gfi) & _gfi(\w.TrueP,\z4._own(z4,z3)) & F2(_gfi)) with signature {'z4': e, '_own': <e,<e,t>>, 'F2': <e,t>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z4.((z4 = _gfi) & _gfi(\w.TrueP,\z4._own(z4,z3)) & F2(_gfi)) with signature {'z4': e, '_own': <e,<e,t>>, 'F2': <e,t>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.exists z4.((z4 = _gfi) & _gfi(\w.TrueP,\z4._own(z4,z3)) & F2(_gfi)) with signature {'z4': e, '_own': <e,<e,t>>, 'F2': <e,t>, 'z3': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression (_company(x) & _director(x) & TrueP & _have(x) & exists z3.(_payrise(z3) & TrueP & _award(x,z3)) & _award(x)) with signature {'_company': <e,t>, 'z3': e, '_director': <e,t>, '_payrise': <e,t>, 'x': e, '_have': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_company(x) & _director(x) & TrueP & _have(x) & exists z3.(_payrise(z3) & TrueP & _award(x,z3)) & _award(x)) with signature {'_company': <e,t>, 'z3': e, '_director': <e,t>, '_payrise': <e,t>, 'x': e, '_have': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z4) with signature {"_'clock": e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z4) & _o(z4) & _'clock(z4)) with signature {"_'clock": e, 'z4': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z4) & _o(z4) & _'clock(z4) & TrueP) with signature {"_'clock": e, 'z4': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4)) with signature {'_john': e, 'z4': e, "_'clock": e, '_o': <e,t>, '_at': <e,<e,t>>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4) & _speak(_john)) with signature {'_john': e, 'z4': e, '_speak': <e,t>, "_'clock": e, '_o': <e,t>, '_at': <e,<e,t>>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4) & _speak(_john) & exists z3.((z3 = _mary) & TrueP & _to(_john,_mary))) with signature {'_john': e, '_to': <e,<e,t>>, 'z3': e, '_mary': e, 'z4': e, '_speak': <e,t>, "_'clock": e, '_o': <e,t>, '_at': <e,<e,t>>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z4.(_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4) & _speak(_john) & exists z3.((z3 = _mary) & TrueP & _to(_john,_mary))) with signature {'_john': e, '_to': <e,<e,t>>, '_mary': e, 'z4': e, '_speak': <e,t>, "_'clock": e, '_four': <e,t>, 'z3': e, '_at': <e,<e,t>>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _john) & TrueP & exists z4.(_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4) & _speak(_john) & exists z3.((z3 = _mary) & TrueP & _to(_john,_mary)))) with signature {'x': e, '_to': <e,<e,t>>, 'z3': e, '_mary': e, '_john': e, '_speak': <e,t>, "_'clock": e, 'z4': e, '_o': <e,t>, '_at': <e,<e,t>>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _john) & TrueP & exists z4.(_four(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_john,z4) & _speak(_john) & exists z3.((z3 = _mary) & TrueP & _to(_john,_mary)))) with signature {'x': e, '_to': <e,<e,t>>, '_mary': e, '_four': <e,t>, '_john': e, '_speak': <e,t>, "_'clock": e, 'z4': e, 'z3': e, '_at': <e,<e,t>>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z8) with signature {"_'clock": e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z8) & _o(z8) & _'clock(z8)) with signature {"_'clock": e, 'z8': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z8) & _o(z8) & _'clock(z8) & TrueP) with signature {"_'clock": e, 'z8': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8)) with signature {'_at': <e,<e,t>>, "_'clock": e, '_four': <e,t>, '_o': <e,t>, '_bill': e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'_at': <e,<e,t>>, '_to': <e,<e,t>>, 'z6': e, '_mary': e, '_speak': <e,t>, "_'clock": e, '_four': <e,t>, '_o': <e,t>, '_bill': e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z8.(_four(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'_at': <e,<e,t>>, '_to': <e,<e,t>>, 'z6': e, '_mary': e, '_speak': <e,t>, "_'clock": e, '_four': <e,t>, '_o': <e,t>, '_bill': e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _bill) & TrueP & exists z8.(_four(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'x': e, '_to': <e,<e,t>>, 'z6': e, '_mary': e, '_at': <e,<e,t>>, '_speak': <e,t>, "_'clock": e, '_four': <e,t>, '_o': <e,t>, '_bill': e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _bill) & TrueP & exists z8.(_four(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'x': e, '_to': <e,<e,t>>, 'z6': e, '_mary': e, '_at': <e,<e,t>>, '_speak': <e,t>, "_'clock": e, '_four': <e,t>, '_o': <e,t>, '_bill': e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z2) with signature {'z2': e, "_'clock": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2)) with signature {"_'clock": e, '_o': <e,t>, 'z2': e, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP) with signature {"_'clock": e, '_o': <e,t>, 'z2': e, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2)) with signature {'_john': e, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_at': <e,<e,t>>, "_'clock": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john)) with signature {'_john': e, '_speak': <e,t>, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_at': <e,<e,t>>, "_'clock": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary))) with signature {'_john': e, '_speak': <e,t>, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_mary': e, 'z1': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary))) with signature {'_john': e, '_speak': <e,t>, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_mary': e, 'z1': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _john) & TrueP & exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary)))) with signature {'_john': e, '_speak': <e,t>, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_mary': e, 'x': e, 'z1': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _john) & TrueP & exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary)))) with signature {'_john': e, '_speak': <e,t>, '_o': <e,t>, 'z2': e, '_four': <e,t>, '_mary': e, 'x': e, 'z1': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z6) with signature {'z6': e, "_'clock": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z6) & _o(z6) & _'clock(z6)) with signature {'z6': e, '_o': <e,t>, "_'clock": e, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z6) & _o(z6) & _'clock(z6) & TrueP) with signature {'z6': e, '_o': <e,t>, "_'clock": e, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z6) & _o(z6) & _'clock(z6) & TrueP & _at(_bill,z6)) with signature {'_bill': e, '_o': <e,t>, '_four': <e,t>, 'z6': e, '_at': <e,<e,t>>, "_'clock": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z6) & _o(z6) & _'clock(z6) & TrueP & _at(_bill,z6) & exists z4.((z4 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'z4': e, '_bill': e, '_speak': <e,t>, '_o': <e,t>, '_four': <e,t>, '_mary': e, 'z6': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z6.(_four(z6) & _o(z6) & _'clock(z6) & TrueP & _at(_bill,z6) & exists z4.((z4 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'z4': e, '_bill': e, '_speak': <e,t>, '_o': <e,t>, '_four': <e,t>, '_mary': e, 'z6': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _bill) & TrueP & exists z6.(_four(z6) & _o(z6) & _'clock(z6) & TrueP & _at(_bill,z6) & exists z4.((z4 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'z4': e, '_bill': e, '_speak': <e,t>, '_o': <e,t>, '_four': <e,t>, '_mary': e, 'x': e, 'z6': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _bill) & TrueP & exists z6.(_four(z6) & _o(z6) & _'clock(z6) & TrueP & _at(_bill,z6) & exists z4.((z4 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'z4': e, '_bill': e, '_speak': <e,t>, '_o': <e,t>, '_four': <e,t>, '_mary': e, 'x': e, 'z6': e, '_at': <e,<e,t>>, "_'clock": e, '_to': <e,<e,t>>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z2) with signature {"_'clock": e, 'z2': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2)) with signature {"_'clock": e, 'z2': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP) with signature {"_'clock": e, 'z2': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2)) with signature {"_'clock": e, '_john': e, '_four': <e,t>, 'z2': e, '_at': <e,<e,t>>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john)) with signature {"_'clock": e, '_john': e, '_speak': <e,t>, '_at': <e,<e,t>>, 'z2': e, '_o': <e,t>, '_four': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary))) with signature {"_'clock": e, '_john': e, '_to': <e,<e,t>>, '_four': <e,t>, 'z1': e, 'z2': e, '_at': <e,<e,t>>, '_speak': <e,t>, '_mary': e, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary))) with signature {"_'clock": e, '_john': e, '_to': <e,<e,t>>, '_four': <e,t>, 'z1': e, 'z2': e, '_at': <e,<e,t>>, '_o': <e,t>, '_mary': e, '_speak': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _john) & TrueP & exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary)))) with signature {'_john': e, "_'clock": e, 'x': e, '_to': <e,<e,t>>, '_four': <e,t>, 'z1': e, 'z2': e, '_at': <e,<e,t>>, '_speak': <e,t>, '_mary': e, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _john) & TrueP & exists z2.(_four(z2) & _o(z2) & _'clock(z2) & TrueP & _at(_john,z2) & _speak(_john) & exists z1.((z1 = _mary) & TrueP & _to(_john,_mary)))) with signature {'_john': e, "_'clock": e, 'x': e, '_to': <e,<e,t>>, '_four': <e,t>, 'z1': e, 'z2': e, '_at': <e,<e,t>>, '_o': <e,t>, '_mary': e, '_speak': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z4) with signature {"_'clock": e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z4) & _o(z4) & _'clock(z4)) with signature {"_'clock": e, 'z4': e, '_five': <e,t>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z4) & _o(z4) & _'clock(z4) & TrueP) with signature {"_'clock": e, 'z4': e, '_five': <e,t>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4)) with signature {"_'clock": e, '_at': <e,<e,t>>, 'z4': e, '_bill': e, '_o': <e,t>, '_five': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4) & _do(_bill)) with signature {"_'clock": e, '_at': <e,<e,t>>, 'z4': e, '_bill': e, '_o': <e,t>, '_five': <e,t>, '_do': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z4.(_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4) & _do(_bill)) with signature {"_'clock": e, '_at': <e,<e,t>>, 'z4': e, '_bill': e, '_o': <e,t>, '_five': <e,t>, '_do': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _bill) & TrueP & exists z4.(_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4) & _do(_bill))) with signature {"_'clock": e, '_at': <e,<e,t>>, 'x': e, '_bill': e, 'z4': e, '_o': <e,t>, '_five': <e,t>, '_do': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _bill) & TrueP & exists z4.(_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4) & _do(_bill))) with signature {"_'clock": e, '_at': <e,<e,t>>, 'x': e, '_bill': e, 'z4': e, '_o': <e,t>, '_five': <e,t>, '_do': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _and(exists x.((x = _bill) & TrueP & exists z4.(_five(z4) & _o(z4) & _'clock(z4) & TrueP & _at(_bill,z4) & _do(_bill)))) with signature {'_and': e, "_'clock": e, 'x': e, '_bill': e, '_at': <e,<e,t>>, 'z4': e, '_o': <e,t>, '_five': <e,t>, '_do': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'clock(z8) with signature {"_'clock": e, 'z8': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z8) & _o(z8) & _'clock(z8)) with signature {'z8': e, "_'clock": e, '_five': <e,t>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z8) & _o(z8) & _'clock(z8) & TrueP) with signature {'z8': e, "_'clock": e, '_five': <e,t>, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8)) with signature {'z8': e, "_'clock": e, '_five': <e,t>, '_at': <e,<e,t>>, '_bill': e, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_five(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'z8': e, "_'clock": e, '_bill': e, '_at': <e,<e,t>>, 'z6': e, '_five': <e,t>, '_to': <e,<e,t>>, '_o': <e,t>, '_mary': e, '_speak': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z8.(_five(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill))) with signature {'z8': e, "_'clock": e, '_bill': e, '_five': <e,t>, '_at': <e,<e,t>>, 'z6': e, '_to': <e,<e,t>>, '_speak': <e,t>, '_mary': e, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _bill) & TrueP & exists z8.(_five(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'z8': e, "_'clock": e, 'x': e, '_bill': e, '_mary': e, '_at': <e,<e,t>>, 'z6': e, '_to': <e,<e,t>>, '_o': <e,t>, '_five': <e,t>, '_speak': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _bill) & TrueP & exists z8.(_five(z8) & _o(z8) & _'clock(z8) & TrueP & _at(_bill,z8) & exists z6.((z6 = _mary) & TrueP & _to(_bill,_mary) & _speak(_bill)))) with signature {'z8': e, "_'clock": e, 'x': e, '_bill': e, '_at': <e,<e,t>>, 'z6': e, '_five': <e,t>, '_to': <e,<e,t>>, '_speak': <e,t>, '_mary': e, '_o': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'t(x) with signature {"_'t": e, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _didn(x) & _'t(x)) with signature {"_'t": e, '_didn': <e,t>, '_bill': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _didn(x) & _'t(x) & F1(x)) with signature {'F1': <e,t>, "_'t": e, '_didn': <e,t>, '_bill': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _didn(x) & _'t(x) & F1(x) & F2(x)) with signature {'F1': <e,t>, '_bill': <e,t>, '_didn': <e,t>, "_'t": e, 'F2': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_bill(x) & _didn(x) & _'t(x) & F1(x) & F2(x)) with signature {'F1': <e,t>, '_bill': <e,t>, '_didn': <e,t>, "_'t": e, 'F2': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.exists x.(_bill(x) & _didn(x) & _'t(x) & F1(x) & F2(x)) with signature {'F1': <e,t>, '_bill': <e,t>, '_didn': <e,t>, "_'t": e, 'F2': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F1 F2.exists x.(_bill(x) & _didn(x) & _'t(x) & F1(x) & F2(x)) with signature {'F1': <e,t>, '_bill': <e,t>, '_didn': <e,t>, "_'t": e, 'F2': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z4 = _john) & _john(\w.TrueP,\z4._own(z4,z6))) with signature {'_own': <e,<e,t>>, 'z6': e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z4 = _john) & _john(\w.TrueP,\z4._own(z4,z6)) & F2(_john)) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z4.((z4 = _john) & _john(\w.TrueP,\z4._own(z4,z6)) & F2(_john)) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z5 = _bill) & _bill(\w.TrueP,\z5._own(z5,z6))) with signature {'_own': <e,<e,t>>, 'z6': e, 'z5': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z5 = _bill) & _bill(\w.TrueP,\z5._own(z5,z6)) & F2(_bill)) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z5': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z5.((z5 = _bill) & _bill(\w.TrueP,\z5._own(z5,z6)) & F2(_bill)) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z5': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (exists z4.((z4 = _john) & _john(\w.TrueP,\z4._own(z4,z6)) & F2(_john)) & exists z5.((z5 = _bill) & _bill(\w.TrueP,\z5._own(z5,z6)) & F2(_bill))) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z4': e, 'z5': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.(exists z4.((z4 = _john) & _john(\w.TrueP,\z4._own(z4,z6)) & F2(_john)) & exists z5.((z5 = _bill) & _bill(\w.TrueP,\z5._own(z5,z6)) & F2(_bill))) with signature {'F2': <e,t>, '_own': <e,<e,t>>, 'z6': e, 'z4': e, 'z5': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression _'t(x) with signature {"_'t": e, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _doesn(x) & TrueP & _'t(x)) with signature {'_bill': <e,t>, "_'t": e, 'x': e, '_doesn': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _doesn(x) & TrueP & _'t(x) & _why(x)) with signature {'_bill': <e,t>, "_'t": e, '_why': <e,t>, 'x': e, '_doesn': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_bill(x) & _doesn(x) & TrueP & _'t(x) & _why(x) & _know(x)) with signature {'_bill': <e,t>, '_why': <e,t>, '_know': <e,t>, '_doesn': <e,t>, "_'t": e, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_bill(x) & _doesn(x) & TrueP & _'t(x) & _why(x) & _know(x)) with signature {'_bill': <e,t>, '_why': <e,t>, '_know': <e,t>, '_doesn': <e,t>, "_'t": e, 'x': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2))) with signature {'z1': e, '_do': <e,<e,t>>, 'z2': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z1': e, '_do': <e,<e,t>>, 'z2': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z1.((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z1': e, '_do': <e,<e,t>>, 'z2': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.exists z1.((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z1': e, '_do': <e,<e,t>>, 'z2': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2))) with signature {'z2': e, '_do': <e,<e,t>>, 'z1': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z2': e, '_do': <e,<e,t>>, 'z1': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z1.((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z2': e, '_do': <e,<e,t>>, 'z1': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.exists z1.((z1 = _john) & _john(\w.TrueP,\z1._do(z1,z2)) & F2(_john)) with signature {'F2': <e,t>, 'z2': e, '_do': <e,<e,t>>, 'z1': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\z3._proposal(z3)) with signature {'z3': e, "_'": e, '_proposal': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\z3._proposal(z3),\F1 F2.exists z3.((z3 = _jones) & F1(_jones) & F2(_jones))) with signature {'z3': e, 'F2': <e,t>, '_proposal': <e,t>, 'F1': <e,t>, "_'": e, '_jones': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\z3._proposal(z3),\F1 F2.exists z3.((z3 = _jones) & F1(_jones) & F2(_jones)),\w.TrueP) with signature {'z3': e, 'F2': <e,t>, '_proposal': <e,t>, 'F1': <e,t>, "_'": e, '_jones': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\z3._proposal(z3),\F1 F2.exists z3.((z3 = _jones) & F1(_jones) & F2(_jones)),\w.TrueP,\y._cost(_smith,y)) with signature {'_smith': e, 'z3': e, '_cost': <e,<e,t>>, 'F2': <e,t>, '_proposal': <e,t>, 'F1': <e,t>, 'y': e, "_'": e, '_jones': e}
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_one(z5) & _lawyer(z5) & all z3.(exists z2.(_report(z2) & TrueP & (z3 = z2) & TrueP) -> _sign(z5,z3)) & TrueP & (x = z5))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_one(z5) & _lawyer(z5) & all z3.(exists z2.(_report(z2) & TrueP & (z3 = z2) & TrueP) -> _sign(z5,z3)) & TrueP & (x = z5))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists x z5.(_one(z5) & _lawyer(z5) & all z3.(exists z2.(_report(z2) & TrueP & (z3 = z2) & TrueP) -> _sign(z5,z3)) & TrueP & (x = z5))(exists x.(TrueP & _be(x)))
                                                                                                                                     ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1660, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1660, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                    ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                    ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                    ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_itel_dash_xz(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                    ^
WARNING:root:There is probably a problem in the typecheck resolution of expression (_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'_itel_dash_xz': <e,t>, 'z1': e, 'x': e, '_fast': <e,t>, '_pc_dash_6082': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'z1': e, 'x': e, '_fast': <e,t>, '_itel_dash_xz': <e,t>, '_pc_dash_6082': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'_fast': <e,t>, '_pc_dash_6082': <e,t>, '_itel_dash_xz': <e,t>, 'z1': e, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'_fast': <e,t>, 'x': e, '_pc_dash_6082': <e,t>, '_itel_dash_xz': <e,t>, 'z1': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'z1': e, 'x': e, '_itel_dash_xz': <e,t>, '_fast': <e,t>, '_pc_dash_6082': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'z1': e, '_fast': <e,t>, 'x': e, '_itel_dash_xz': <e,t>, '_pc_dash_6082': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression (_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'_fast': <e,t>, '_itel_dash_xz': <e,t>, 'z1': e, 'x': e, '_pc_dash_6082': <e,t>}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'z1': e, 'x': e, '_pc_dash_6082': <e,t>, '_fast': <e,t>, '_itel_dash_xz': <e,t>}
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z3) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z3))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_itel_dash_xz(z3) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z3))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z3.(_itel_dash_xz(z3) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z3))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                    ^
WARNING:root:There is probably a problem in the typecheck resolution of expression (_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'z1': e, '_fast': <e,t>, '_itel_dash_xz': <e,t>, '_pc_dash_6082': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.(_pc_dash_6082(x) & TrueP & _as(x) & _fast(x) & exists z1.(_itel_dash_xz(z1) & TrueP & _as(x,z1))) with signature {'_fast': <e,t>, 'x': e, 'z1': e, '_pc_dash_6082': <e,t>, '_itel_dash_xz': <e,t>}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_500(z1) & _mip(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_500(z1) & _mip(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z1.(_500(z1) & _mip(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                      ^
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _apcom) & TrueP & exists z3.(_more(z3) & _important(z3) & _customer(z3) & TrueP & _have(_apcom,z3)) & exists z4.((z4 = _itel) & TrueP & _have(_itel))) with signature {'_more': <e,t>, '_important': <e,t>, 'z3': e, '_customer': <e,t>, '_itel': e, 'x': e, '_apcom': e, 'z4': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _apcom) & TrueP & exists z3.(_more(z3) & _important(z3) & _customer(z3) & TrueP & _have(_apcom,z3)) & exists z4.((z4 = _itel) & TrueP & _have(_itel))) with signature {'_more': <e,t>, '_important': <e,t>, 'z3': e, '_customer': <e,t>, '_itel': e, 'x': e, 'z4': e, '_apcom': e}
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_fast(x) & X0(\F1 F2.F2(x))))),z1)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_fast(x) & X0(\F1 F2.F2(x))))),z1)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
all z1.((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_fast(x) & X0(\F1 F2.F2(x))))),z1)))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                             ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 294, in handle
    return self.handle_open(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 404, in handle_open
    accum = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 302, in attempt_adjuncts
    expression = self.attempt_BooleanExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 436, in attempt_BooleanExpression
    self.process_next_expression(tok))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 282, in handle
    return self.handle_variable(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 323, in handle_variable
    "predicates." % tok)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.
exists x.(_pc_dash_6082(x) & TrueP & x(\w.TrueP,\z2.(_faster(z2) & exists z1.(_itel(z1) & _computer(z1) & TrueP & _than(\F1 F2.F2(z2),z1)))))
                                     ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
all z1.((_itel(z1) & _computer(z1)) -> (TrueP -> _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                               ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) & exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) & exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) & exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                                                                                                                                              ^
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) | exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) | exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
(exists z1.(_itel_dash_zx(z1) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z1)) | exists z2.(_itel_dash_zy(z2) & TrueP & _than(\X0 Q.Q(\w.TrueP,\Q.Q(\w.TrueP,\x.(_faster(x) & X0(\F1 F2.F2(x))))),z2)))(\F2 F3.exists x.(_pc_dash_6082(x) & F2(x) & F3(x)))
                                                                                                                                                                                                                                              ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 294, in handle
    return self.handle_open(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 404, in handle_open
    accum = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 302, in attempt_adjuncts
    expression = self.attempt_BooleanExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 436, in attempt_BooleanExpression
    self.process_next_expression(tok))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 282, in handle
    return self.handle_variable(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 323, in handle_variable
    "predicates." % tok)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.
exists x.(_conference(x) & TrueP & x(\w.TrueP,\z9.(_over(z9) & exists z7.(_july(z7) & _8th(z7) & TrueP & _on(\F1 F2.F2(z9),z7)) & exists z8.(_1994(z8) & TrueP & _on(\F1 F2.F2(z9),z8)))))
                                   ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 301, in attempt_adjuncts
    expression = self.attempt_ApplicationExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 471, in attempt_ApplicationExpression
    "' is not a Lambda Expression, an "
nltk.sem.logic.LogicalExpressionException: The function '(_shore(z2) & TrueP & _to(\F Q.Q(\w.TrueP,\x.(_swam(x) & F(x))),z2))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: The function '(_shore(z2) & TrueP & _to(\F Q.Q(\w.TrueP,\x.(_swam(x) & F(x))),z2))' is not a Lambda Expression, an Application Expression, or a functional predicate, so it may not take arguments.
exists z2.(_shore(z2) & TrueP & _to(\F Q.Q(\w.TrueP,\x.(_swam(x) & F(x))),z2))(\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)))
                                                                             ^
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1735, in _set_type
    self.first._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z3 = _smith) & _smith(\w.TrueP,\z3.(_write(z3) & _every(\y._to(z3,y),\w.TrueP,\F2 F3.F3(z4),\z2._week(z2))))) with signature {'_to': <e,<e,t>>, '_week': <e,t>, '_every': <<e,t>,<<t,e>,<<t,<<e,t>,t>>,<<e,t>,t>>>>, 'z4': e, 'F3': <e,t>, 'y': e, 'z2': e, '_write': <e,t>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((z3 = _smith) & _smith(\w.TrueP,\z3.(_write(z3) & _every(\y._to(z3,y),\w.TrueP,\F2 F3.F3(z4),\z2._week(z2)))) & F2(_smith)) with signature {'_to': <e,<e,t>>, '_week': <e,t>, '_every': <<e,t>,<<t,e>,<<t,<<e,t>,t>>,<<e,t>,t>>>>, 'z4': e, 'F3': <e,t>, 'y': e, 'F2': <e,t>, 'z2': e, '_write': <e,t>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists z3.((z3 = _smith) & _smith(\w.TrueP,\z3.(_write(z3) & _every(\y._to(z3,y),\w.TrueP,\F2 F3.F3(z4),\z2._week(z2)))) & F2(_smith)) with signature {'_to': <e,<e,t>>, '_week': <e,t>, '_every': <<e,t>,<<t,e>,<<t,<<e,t>,t>>,<<e,t>,t>>>>, 'z4': e, 'F3': <e,t>, 'y': e, 'F2': <e,t>, 'z2': e, '_write': <e,t>, 'z3': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \F2.exists z3.((z3 = _smith) & _smith(\w.TrueP,\z3.(_write(z3) & _every(\y._to(z3,y),\w.TrueP,\F2 F3.F3(z4),\z2._week(z2)))) & F2(_smith)) with signature {'_to': <e,<e,t>>, '_week': <e,t>, '_every': <<e,t>,<<t,e>,<<t,<<e,t>,t>>,<<e,t>,t>>>>, 'z4': e, 'F3': <e,t>, 'y': e, 'F2': <e,t>, 'z2': e, '_write': <e,t>, 'z3': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 140, in parse
    result = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 291, in handle
    return self.handle_quant(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 384, in handle_quant
    accum = self.process_next_expression(tok)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 294, in handle
    return self.handle_open(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 404, in handle_open
    accum = self.process_next_expression(None)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 276, in process_next_expression
    return self.attempt_adjuncts(accum, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 302, in attempt_adjuncts
    expression = self.attempt_BooleanExpression(expression, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 436, in attempt_BooleanExpression
    self.process_next_expression(tok))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 271, in process_next_expression
    accum = self.handle(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 282, in handle
    return self.handle_variable(tok, context)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 323, in handle_variable
    "predicates." % tok)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 185, in build_dynamic_library
    exprs_logic.append(lexpr(expr))
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/logic_parser.py", line 21, in lexpr
    return logic_parser.parse(formula_str)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 145, in parse
    raise LogicalExpressionException(None, msg)
nltk.sem.logic.LogicalExpressionException: 'x' is an illegal predicate name.  Individual variables may not be used as predicates.
exists x.(TrueP & x(\w.TrueP,\z11.(_still(z11) & exists z10.((z10 = _paris) & TrueP & _in(\F1 F2.F2(z11),_paris)))))
                  ^
WARNING:root:There is probably a problem in the typecheck resolution of expression _'s(_jones) with signature {'_jones': e, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _jones) & TrueP & _'s(_jones)) with signature {'x': e, '_jones': e, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression ((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10)))) with signature {'Prog': <t,t>, 'z10': e, '_jones': e, 'x': e, '_program': <e,t>, '_updat': <e,<e,t>>, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10)))) with signature {'Prog': <t,t>, 'z10': e, '_jones': e, 'x': e, '_program': <e,t>, '_updat': <e,<e,t>>, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _as(x7,x6,x5,x4,\F2 F3.exists x.(exists z8.((z8 = _mary) & TrueP & Rel(x,_mary)) & _story(x) & F2(x) & F3(x)),\Q.Q(\w.TrueP,\x._last(x)),\V Q.Q(\w.TrueP,\x.(_long(x) & V(\F1 F2.F2(x)) & _as(x))),exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10))))) with signature {'Prog': <t,t>, 'Q': <<t,e>,<<e,t>,t>>, 'x6': e, 'z10': e, '_updat': <e,<e,t>>, 'x4': e, 'F3': <e,t>, 'x7': e, 'F2': <e,t>, 'Rel': <e,<e,t>>, 'x': e, '_story': <e,t>, '_last': <e,t>, '_long': <e,t>, 'V': <<t,<<e,t>,t>>,t>, '_jones': e, '_mary': e, '_program': <e,t>, 'x5': e, 'z8': e, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \x7._as(x7,x6,x5,x4,\F2 F3.exists x.(exists z8.((z8 = _mary) & TrueP & Rel(x,_mary)) & _story(x) & F2(x) & F3(x)),\Q.Q(\w.TrueP,\x._last(x)),\V Q.Q(\w.TrueP,\x.(_long(x) & V(\F1 F2.F2(x)) & _as(x))),exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10))))) with signature {'Prog': <t,t>, 'z10': e, 'x6': e, 'x4': e, '_updat': <e,<e,t>>, 'x7': e, 'F2': <e,t>, 'x': e, 'Rel': <e,<e,t>>, 'Q': <<t,e>,<<e,t>,t>>, '_story': <e,t>, '_last': <e,t>, '_long': <e,t>, 'V': <<t,<<e,t>,t>>,t>, '_jones': e, '_mary': e, '_program': <e,t>, 'x5': e, 'z8': e, 'F3': <e,t>, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \x6 x7._as(x7,x6,x5,x4,\F2 F3.exists x.(exists z8.((z8 = _mary) & TrueP & Rel(x,_mary)) & _story(x) & F2(x) & F3(x)),\Q.Q(\w.TrueP,\x._last(x)),\V Q.Q(\w.TrueP,\x.(_long(x) & V(\F1 F2.F2(x)) & _as(x))),exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10))))) with signature {'Prog': <t,t>, 'z10': e, 'x6': e, 'x4': e, '_updat': <e,<e,t>>, 'x7': e, 'F2': <e,t>, 'x': e, 'Rel': <e,<e,t>>, 'Q': <<t,e>,<<e,t>,t>>, '_story': <e,t>, '_last': <e,t>, '_long': <e,t>, 'V': <<t,<<e,t>,t>>,t>, '_jones': e, '_mary': e, '_program': <e,t>, 'x5': e, 'z8': e, 'F3': <e,t>, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \x5 x6 x7._as(x7,x6,x5,x4,\F2 F3.exists x.(exists z8.((z8 = _mary) & TrueP & Rel(x,_mary)) & _story(x) & F2(x) & F3(x)),\Q.Q(\w.TrueP,\x._last(x)),\V Q.Q(\w.TrueP,\x.(_long(x) & V(\F1 F2.F2(x)) & _as(x))),exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10))))) with signature {'Prog': <t,t>, 'z10': e, 'x6': e, 'x4': e, '_updat': <e,<e,t>>, 'x7': e, 'F2': <e,t>, 'x': e, 'Rel': <e,<e,t>>, 'Q': <<t,e>,<<e,t>,t>>, '_story': <e,t>, '_last': <e,t>, '_long': <e,t>, 'V': <<t,<<e,t>,t>>,t>, '_jones': e, '_mary': e, '_program': <e,t>, 'x5': e, 'z8': e, 'F3': <e,t>, "_'s": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression \x4 x5 x6 x7._as(x7,x6,x5,x4,\F2 F3.exists x.(exists z8.((z8 = _mary) & TrueP & Rel(x,_mary)) & _story(x) & F2(x) & F3(x)),\Q.Q(\w.TrueP,\x._last(x)),\V Q.Q(\w.TrueP,\x.(_long(x) & V(\F1 F2.F2(x)) & _as(x))),exists x.((x = _jones) & TrueP & _'s(_jones) & exists z10.(_program(z10) & TrueP & Prog(_updat(_jones,z10))))) with signature {'Prog': <t,t>, 'z10': e, 'x6': e, 'x4': e, '_updat': <e,<e,t>>, 'x7': e, 'F2': <e,t>, 'x': e, 'Rel': <e,<e,t>>, 'Q': <<t,e>,<<e,t>,t>>, '_story': <e,t>, '_last': <e,t>, '_long': <e,t>, 'V': <<t,<<e,t>,t>>,t>, '_jones': e, '_mary': e, '_program': <e,t>, 'x5': e, 'z8': e, 'F3': <e,t>, "_'s": e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x)) with signature {'_heart': <e,t>, 'x': e, "_'": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones))) with signature {'_heart': <e,t>, 'F1': <e,t>, 'F2': <e,t>, "_'": e, 'x': e, '_jones': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP) with signature {'_heart': <e,t>, 'F1': <e,t>, 'F2': <e,t>, "_'": e, 'x': e, '_jones': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP,\x._beat(x)) with signature {'_heart': <e,t>, 'F1': <e,t>, 'F2': <e,t>, "_'": e, '_beat': <e,t>, 'x': e, '_jones': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _see(_smith,_'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP,\x._beat(x))) with signature {'_heart': <e,t>, 'F1': <e,t>, 'F2': <e,t>, "_'": e, '_smith': e, '_see': <e,t>, '_jones': e, '_beat': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x)) with signature {'x': e, '_heart': <e,t>, "_'": e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones))) with signature {"_'": e, 'F2': <e,t>, 'F1': <e,t>, '_jones': e, '_heart': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP) with signature {"_'": e, 'F2': <e,t>, 'F1': <e,t>, '_jones': e, '_heart': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP,\x._beat(x)) with signature {"_'": e, '_beat': <e,t>, 'F2': <e,t>, 'F1': <e,t>, '_jones': e, '_heart': <e,t>, 'x': e}
WARNING:root:There is probably a problem in the typecheck resolution of expression _see(_smith,_'(\x._heart(x),\F1 F2.exists x.((x = _jones) & F1(_jones) & F2(_jones)),\w.TrueP,\x._beat(x))) with signature {"_'": e, '_beat': <e,t>, 'F2': <e,t>, '_see': <e,t>, 'x': e, '_smith': e, 'F1': <e,t>, '_heart': <e,t>, '_jones': e}
Traceback (most recent call last):
  File "scripts/prove.py", line 66, in <module>
    main()
  File "scripts/prove.py", line 57, in main
    inference_result, coq_scripts = prove_doc(doc, args.abduction)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_tools.py", line 109, in prove_doc
    dynamic_library_str = get_dynamic_library_from_doc(doc, formulas)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 148, in get_dynamic_library_from_doc
    coq_lib_augmented = build_dynamic_library(formulas, nltk_sig)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in build_dynamic_library
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 188, in <listcomp>
    signatures = [resolve_types(e) for e in exprs_logic]
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1239, in visit
    return combinator([function(self.function), function(self.argument)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1546, in visit
    return combinator([function(self.term)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 123, in resolve_types
    lambda parts: combine_signatures(parts))
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1703, in visit
    return combinator([function(self.first), function(self.second)])
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 122, in <lambda>
    signature = expr.visit(lambda e: resolve_types(e, signature),
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 125, in resolve_types
    signature = remove_colliding_predicates(signature, expr)
  File "/var/autofs/cl/work/noji/RTE/ccg2lambda/scripts/semantic_types.py", line 91, in remove_colliding_predicates
    expr.typecheck(signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 980, in typecheck
    self._set_type(signature=sig)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1736, in _set_type
    self.second._set_type(TRUTH_TYPE, signature)
  File "/home/cl/noji/.pyenv/versions/3.5.3/lib/python3.5/site-packages/nltk/sem/logic.py", line 1586, in _set_type
    self.term._set_type(other_type.second, signature)
AttributeError: 'TruthValueType' object has no attribute 'second'
